	public boolean isBSTOrder(BSTNode<K, V> cur, K min, K max) { 
		if (cur == null) return true;
		if (cur.key.compareTo(min) < 0) {
			System.out.println("Not BST order: " + cur.key + "is smaller than its left child");
			return false;
		}		
		if (cur.key.compareTo(max) > 0) {
			System.out.println("Not BST order: " + cur.key + "is larger than its right child");
			return false;	
		}
		
		// min and max redefined by parent node key
		return isBSTOrder(cur.left, min, cur.key) && isBSTOrder(cur.right, cur.key, max);  
	}
	
	public boolean isAVLStructure(BSTNode<K, V> cur) {
		if (cur == null) return true;
		
		int difference = Math.abs(cur.left.height - cur.right.height);
		if (difference < 2 && isAVLStructure(cur.left) && isAVLStructure(cur.right)) 
			return true;
		else {
			System.out.println("Not AVL structure: " + cur.key + "is not height balanced");
			return false;
		}
	}
	
